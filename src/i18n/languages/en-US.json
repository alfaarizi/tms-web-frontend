{
  "autonym": "English",
  "common": {
    "userCode": "{{uniId}}",
    "group": "Group",
    "groups": "Groups",
    "name": "Name",
    "details": "Details",
    "download": "Download",
    "serverError": "Server Error",
    "yes": "Yes",
    "no": "No",
    "save": "Save",
    "add": "Add",
    "cancel": "Cancel",
    "delete": "Delete",
    "confirmDelete": "Are you sure you want to delete the selected item?",
    "duplicate": "Duplicate",
    "edit": "Edit",
    "options": "Options",
    "userAddFailed": "Failed to add the following users",
    "userAddSuccess": "Added {{count}} user(s)",
    "userCodes": "{{uniIds}} separated with spaces",
    "userCodesRequired": "Please provide valid {{uniIds}} separated with spaces!",
    "students": "Students",
    "instructors": "Instructors",
    "asInstructor": "As an instructor",
    "officialEmail": "Official email address",
    "customEmail": "Custom email address",
    "fieldRequired": "Field is required",
    "minValueRequired": "Smallest allowed value: {{value}}",
    "maxValueRequired": "Largest allowed value: {{value}}",
    "fieldMaxLength": "Largest allowed length: {{length}} characters",
    "semesters": "Semesters",
    "notifications": "Notifications",
    "minutes": "minutes",
    "studentName": "Student name",
    "noFilesSelected": "Please select at least one file!",
    "error": "Error",
    "success": "Success",
    "information": "Information",
    "confirmation": "Confirmation",
    "actual": "Actual",
    "all": "All",
    "description": "Description",
    "openInNewTab": "Open in new tab",
    "search": "Search",
    "settings": "Settings",
    "modify": "Modify",
    "export": "Export",
    "timezone": "Timezone",
    "previous": "Previous",
    "next": "Next",
    "insert": "Insert",
    "back": "Back",
    "groupView": "Group view",
    "view": "View",
    "list": "List",
    "grid": "Grid",
    "quick": "Quick Grader",
    "areYouSure": "Are you sure?",
    "confirmDiscard": "If you close the modal, all your changes will be lost!",
    "confirmAddSemester": "If you add a new semester, that will be the actual one and you won't be able to change back the previous one",
    "cancelCanvasModalDesc": "Are you sure you want to cancel the Canvas synchronization?",
    "addNewUserCode": "Add new {{uniId}}: ",
    "searchForUserCodeOrName": "Enter {{uniId}} or name",
    "userCodeOrNameRequired": "Please provide valid {{uniId}}!",
    "basicSearch": "Import",
    "autoCompleteSearch": "Search",
    "operations": "Operations",
    "notSelected": "Not selected"
  },
  "days": {
    "monday": "Monday",
    "tuesday": "Tuesday",
    "wednesday": "Wednesday",
    "thursday": "Thursday",
    "friday": "Friday",
    "saturday": "Saturday",
    "sunday": "Sunday",
    "yesterday": "Yesterday",
    "today": "Today",
    "tomorrow": "Tomorrow"
  },
  "passwordProtected": {
    "exitPasswordProtected": "Exit password",
    "entryPasswordProtected": "Entry password",
    "verify": "Verify",
    "verifyRequired": "Verify required",
    "verifySuccess": "Successful verification",
    "verifyDisableIpCheck": "Disable IP address check",
    "verified": "Verified",
    "studentWarning": "The solution must be validated by the instructor, otherwise it will be invalid!",
    "unlockSuccess": "Successfully unlocked",
    "unlock": "Unlock",
    "unlockRequired": "Unlock required",
    "unlockWarning": "The task is password protected, please provide the password to unlock it!"
  },
  "passwordProtectedTest": {
    "passwordProtected": "Password protected",
    "unlock": "Unlock",
    "unlockRequired": "Unlock required",
    "unlockSuccess": "Successful unlock",
    "studentWarning": "The test must be unlocked before starting!"
  },
  "fileUpload": {
    "success": "{{count}} file(s) uploaded successfully",
    "failed": "File upload failed",
    "sizeLimitError": "The total size of uploaded files is limited to {{maxSize}} MiB!",
    "browse": "Browse",
    "upload": "Upload",
    "uploadInProgress": "Uploading...",
    "forceOverwrite": "Overwrite existing files with same names",
    "hint": {
      "atLeastOneDockerfile": "Upload must contain a file named \"Dockerfile\"!",
      "dllExeNotAllowed": "Uploading .dll and .exe files is not allowed!",
      "gitFolderNotAllowed": "Uploading .git folders is not allowed!",
      "zipOnly": "When uploading multiple zip files, the files are packed into a single zip!",
      "willBeZipped": "The uploaded file(s) will be packed into a single zip file!"
    }
  },
  "errorPage": {
    "genericMessage": "Something went wrong",
    "pageNotFound": "Page not found",
    "accessDenied": "Access denied",
    "versionError": "The backend version does not meet with the required version range! Excepted range: {{requiredRange}}, current version: {{version}}.",
    "serverTimeDiff": "The server time differs from the local time by {{diff}} minutes, so the application may not work properly. (To remove the message, set the correct time and reload the page)"
  },
  "aboutPage": {
    "about": "About TMS",
    "versionFrontend": "Frontend version",
    "versionBackend": "Backend version",
    "description": "TMS (Task Management System) is an open-source, web-based assingment management, automated evaluator, plagiarism detection and examination software for computer science higher education.",
    "issueBoard": "Issue Board",
    "issueBoardText": "If you encounter a bug, please report it on our <a>Issue Board</a>. Thank you for helping us improve!",
    "issueBoardLink": "Issue Board",
    "changelog": "Changelog",
    "changelogText": "To see the latest updates and improvements, check out our changelogs:",
    "changelogLinkBackend": "Backend changelog",
    "changelogLinkFrontend": "Frontend changelog",
    "credits": "Credits",
    "creditsText": "Our special thanks goes to all participant of the project! Discover the team on our <a>Credits</a> page.",
    "creditsLink": "Credits"
  },
  "login": {
    "login": "Login",
    "username": "Username",
	"password": "Password",
    "ldapHelp": "You can log in with your INF.ELTE.HU account. (The one used to login on ELTE FI faculty computers.)",
    "student": "Student access",
    "instructor": "Instructor access",
    "admin": "Administrator access",
    "userCodeRequired": "Invalid or missing {{uniId}}",
    "nameRequired": "Name is required",
    "emailRequired": "Email is required",
    "mockUsers": {
      "student": "Student {{number}}",
      "instructor": "Instructor {{number}}",
      "admin": "Administrator {{number}}"
    }
  },
  "settings": {
    "customEmail": {
      "confirmed": "Email address confirmed",
      "unconfirmed": "Unconfirmed email address. Please confirm your custom email address before sending notifications there."
    },
    "notificationTarget": {
      "label": "Send notifications to",
      "required": "Notification target is required",
      "official": "Official email address",
      "custom": "Custom email address",
      "none": "Donâ€™t send notifications",
      "noEmailToUnconfirmedAddress": "Please confirm your custom email address before sending notifications there"
    },
    "language": {
      "label": "Language",
      "required": "Language is required"
    },
    "successfullySaved": "Settings successfully saved"
  },
  "confirmEmail": {
    "success": "The email confirmation was successful.",
    "openSettings": "You might now want to visit <settings>your settings</settings> to change the address used for notifications.",
    "logIn": "You might now want to <login>log in</login> to change the address used for notifications.",
    "differentUser": "<strong>Warning:</strong> The email address belongs to another user. To adjust your notification preferences, <logout>log out</logout> and log in with the user this address belongs to.",
    "failed": "The email confirmation failed. Either you provided a wrong confirmation code, or the code has expired."
  },
  "navbar": {
    "taskmanager": "Task Manager",
    "quizzes": "Quizzes",
    "logout": "Logout ({{userCode}})",
    "role": "Role",
    "ipRestrictionManager" : "IP Address Manager",
    "roles": {
      "student": "Student",
      "instructor": "Instructor",
      "admin": "Admin"
    },
    "semesterManager": "Semester Manager",
    "notificationManager": "Notification Manager",
    "plagiarism": "Plagiarism",
    "statistics": "Statistics"
  },
  "course": {
    "course": "Course",
    "courses": "Courses",
    "codes": "Course codes",
    "separateCodes": "(Separate the course codes by ,)",
    "lecturers": "Lecturers",
    "addLecturers": "Add lecturers",
    "newCourse": "New Course",
    "editCourse": "Edit Course",
    "invalidCourseCodes": "The maximum length of a course code is {{maxLength}} characters, the following codes are not valid: {{codes}}.",
    "sort": "Sort Courses"
  },
  "notification": {
    "notification": "Notification",
    "newNotification": "New Notification",
    "editNotification": "Edit Notification",
    "message": "Message",
    "startTime": "Starting time",
    "endTime": "Ending time",
    "scope": "Scope",
    "scopes": {
      "everyone": "Everyone",
      "user": "Logged in users",
      "student": "Logged in students",
      "faculty": "Logged in instructors"
    },
    "dismissible": "Dismissible",
    "dismissibleHelp": "If checked, the notification can be dismissed by the user."
  },
  "group": {
    "number": "Group code",
    "instructors": "Instructors",
    "examGroup": "Exam Group",
    "day": "Day",
    "hasSchedule": "Set timetable for group",
    "roomNumber": "Room number",
    "startTime": "Start time",
    "newGroup": "New Group",
    "editGroup": "Edit Group",
    "addStudents": "Add Students",
    "addInstructors": "Add Instructors",
    "dayRequired": "Day is required",
    "startTimeRequired": "Start time is required",
    "courseIDRequired": "Course is required",
    "studentSolutions": "Solutions and statistics",
    "defaultSort": "Default",
    "stats": {
      "stats": "Statistics",
      "intime": "In time",
      "delayed": "Delayed",
      "missed": "Missed",
      "due": "Due",
      "handlingTime": "Handling Time",
      "submitted": "Submitted",
      "points": "Points",
      "min": "Minimum",
      "max": "Maximum",
      "avg": "Average",
      "studentPoints": "Points of student"
    },
    "successfulDuplication": "Successfully duplicated",
    "examGroupHelp": "For exam groups the group number and the identity of the instructors and submission graders are confidential toward the students.",
    "canvasSync": "Canvas synchronization",
    "cancelCanvasSync": "Cancel Canvas synchronization",
    "canvasSyncTooltip": {
      "part1": "Only courses with a published state in Canvas will be synchronized.",
      "part2": "Only assignments will be synchronized, quizzes not.",
      "part3": "Only published assignments with an \"Online\" submission type, \"File Uploads\" entry type, and restricted extension type to \"zip\" will be synchronized."
    },
    "lastSyncTime": "Last synchronization",
    "canvasCourse": "Canvas course",
    "canvasSection": "Canvas section",
    "studentCount": "{{count}} students",
    "successfulCanvasSync": "Successful Canvas synchronization",
    "successfulCancelCanvasSync": "Successfully Cancelled Canvas synchronization",
    "waitingForCanvas": "Waiting for Canvas...",
    "localTime": "Local time",
    "groupTime": "Group time",
    "notes": "Notes",
    "addNotes": "Add Notes",
    "studentNotes": "Notes for the Student",
    "syncLevel": "Canvas synchronization level",
    "syncLevels": {
      "nameLists": "Only synchronize student and lecturer name lists",
      "nameListsAndTasks": "Synchronize name lists and tasks"
    }
  },
  "task": {
    "task": "Assignment",
    "tasks": "Assignments",
    "name": "Name",
    "softDeadLine": "Soft deadline",
    "hardDeadLine": "Hard deadline",
    "submitted": "Submitted",
    "submittedLate": "Submitted late",
    "pastDue": "Past due",
    "dueInDays": "due in {{days}} day(s)",
    "dueInHours": "due in {{hours}} hour(s)",
    "dueInMinutes": "due in {{minutes}} minute(s)",
    "category": "Category",
    "available": "Available",
    "structuralRequirement": "Structural requirements",
    "regularExpression": "Regular expression",
    "includes": "Must include",
    "excludes": "Must not include",
    "structuralRequirementErrorMessage": "Error message",
    "structuralRequirementErrorMessageHelp": "If no custom error message is provided, one containing the violated regular expression will be generated.",
    "creator": "Creator",
    "description": "Description",
    "submittedSolution": "Solution",
    "ungraded": "Ungraded",
    "grade": "Grade",
    "notes": "Notes",
    "personalDeadline": "Personal deadline",
    "personalDeadlineHelp": "After setting a personal deadline, students can submit a new solution even after the hard deadline, assuming their last upload has not yet been graded or was rejected.",
    "ipAddresses": "IP Addresses",
    "ipRestrictions": "IP Address Restrictions",
    "ipNoRoom": "No room associated with this address",
    "instructorFiles": "Instructor files",
    "instructorFilesHelp": "Files uploaded here will be accessible for students (once the task is available for them).",
    "testFiles": "Test files",
    "taskFiles": "Task files",
    "taskFilesHelp": "Files uploaded here will be accessible for students (once the task is available for them).",
    "solution": "Solution",
    "downloadSolutions": "Download Solutions",
    "status": "Status",
    "uploadTime": "Upload time",
    "uploadCount": "Upload count",
    "delay": "Delay",
    "graderName": "Grader",
    "newSolution": "Upload new solution",
    "solutions": "Solutions",
	"submissionLimitHelp": "Zero (0) means unlimited attempts.",
	"structuralRequirementHelp": "You can define regular expressions that will ensure a directory or a file either exists or does not exist in the uploaded solution. Example regular expressions: '\\.cpp$' or '/bin/'.",
    "exitPassword": "Password required to verify submissions",
    "entryPassword": "Password required to view task",
    "exitPasswordHelp": "For exit password-protected tasks the solutions must be verified after uploading. Leave the password field blank to turn off password protection. Important: after removing the password all solutions will be verified!",
    "exitPasswordGitPush": "For exit password-protected tasks the 'git push' command is disabled.",
    "entryPasswordHelp": "The details of entry password-protected tasks can only be viewed by the students after entering the specified password. The password only unlocks the task in the browser, where it was provided.",
    "isVersionControlled": "Version controlled",
    "excludedStructuralRequirements": "Excluded structural requirements",
    "includedStructuralRequirements": "Included structural requirements",
    "versionControlledHelp": "Uses separate Git repositories for each student. Not modifiable after task is created!",
    "emailNotification": "Email notification",
    "emailNotificationHelp": "Send an email notification to the students when changing the deadline.",
    "categories": {
      "smallerTasks": "Smaller Tasks",
      "largerTasks": "Larger Tasks",
      "classworkTasks": "Classwork Tasks",
      "exams": "Exams"
    },
    "restrictSubmissionAttempts": {
      "maxAttempts": "Submission attempts",
      "unlimited": "Unlimited",
      "remaining": "Remaining attempts"
    },
    "deadlineStatus": {
      "notAvailable": "Not available",
      "softDeadlineExpired": "Soft deadline expired",
      "hardDeadlineExpired": "Hard deadline expired",
      "withinTheDeadline": "Within the deadline"
    },
    "newTask": "New Task",
    "editTask": "Edit Task",
    "downloadAll": "Download All",
    "downloadOnlyUngraded": "Download ungraded",
    "uploader": "Uploader",
    "successfulGrade": "Successfully graded",
    "successfulPersonalDeadline": "Successfully set personal deadline",
    "evaluator": {
      "tabName": "Automatic evaluator",
      "environment": "Environment",
      "autoTester": "Automatic tester",
      "activateAutoTester": "Activate automatic testing",
      "testCases": "Test cases",
      "arguments": "Arguments",
      "argumentsHelp": "Passed as console arguments to the process.",
      "input": "Input",
      "inputHelp": "Passed through the standard input stream to the process.",
      "output": "Output",
      "outputHelp": "Expected content of the standard output stream. Starting and trailing whitespaces are not expected to match precisely.",
      "newTestCase": "Add testcase",
      "editTestCase": "Edit testcase",
      "testOS": "Operating System",
      "imageName": "Docker Image",
      "uploadDockerfile": "Upload Dockerfile",
      "uploadDockerfileHelp": "If you upload a Dockerfile, the application will ignore the value of the Docker Image filed. Notice that building an image from a Dockerfile can take up several minutes.",
      "compileInstructions": "Compiler instructions",
      "runInstructions": "Run instructions",
      "runInstructionsHelp": "Arguments of the test case are available in the \"$@\" variable. ($args in case of PowerShell.) The serial of the test case is stored in the $TEST_CASE_NR environment variable.",
      "runWebAppInstructionsHelp": "Set up web application environment and start web application. The instructions will be executed in asynchronously.",
      "showFullErrorMsg": "When checked students can see the detailed compile or runtime messages.",
      "reevaluate": "Reevaluate already tested, but ungraded student submissions",
      "templates": "Templates",
      "templateHelp": "In case you are not familiar with the interface, it is recommended to start with a template. Please click on the Templates button and select one of the preconfigured templates.",
      "builtImageNotFound": "The automatic evaluator only runs on tasks with successfully downloaded or built image.",
      "successfullyBuild": "There is an image successfully built or downloaded for this task with creation date: {{createdAt}}",
      "failedBuild": "Building an image from the Dockerfile was unsuccessful.",
      "inProgress": "We are processing your request, please wait! If we need to download or build a new image, it may take some time.",
      "imageRequired": "Please provide a Docker Image or upload a Dockerfile!",
      "previousSemesterInfo": "Tester settings cannot be modified: the selected task belongs to a previous semester.",
      "results": "Automatic Tester Results",
      "notTested": "The automatic tester has not tested your solution yet.",
      "testFilesHelp": "Student solution will be loaded into the /test/submission/ folder, which will be the default working directory during compilation and testing. Test files are loaded into the /test/test_files/ folder. On Windows OS, the root folder will be C:\\\\test\\ in an analog manner.",
      "webTestSuiteHelp": "The file syntax will be validated on upload.",
      "webTestSuiteTitle": "Upload acceptance test suite",
      "webTestSuites": "Uploaded acceptance test suites",
      "testSuiteValidationFailed": "Test suite validation failed, check validation_error.log",
      "downloadReport": "Download acceptance test reports",
      "webTestInfo": "Writing acceptance tests",
      "webTestTemplateDesc": "Tests can be created with Robot Framework. Download the test template file to begin writing your test cases. The file syntax will be validated on upload. The uploaded acceptance test suites will be executed in alphabetical order.",
      "updateImage": "Update Docker image",
      "uploadPriorUpdate": "Docker image must be save before updating",
      "appType": "Application type",
      "appTypes": {
        "Console": "Console",
        "Web": "Web"
      },
      "port": "Port",
      "portHint": "Exposed port of the webserver running in the Docker container",
      "testCaseUpload": "You can import the list of test cases from XLSX and CSV files. Important: the existing test cases will be discarded after the import!",
      "staticCodeAnalysis": "Static code analysis",
      "staticCodeAnalysisReports": "Static code analysis reports",
      "activateStaticCodeAnalysis": "Activate static code analysis",
      "staticCodeAnalyzerTool": "Static code analyzer tool",
      "codeCheckerToggles": "Additional arguments of the CodeChecker check command",
      "codeCheckerTogglesHelp": "The detailed documentation of the CodeChecker check command",
      "staticCodeAnalyzerInstructions": "Static code analyzer tool instructions",
      "staticCodeAnalyzerInstructionsHelp": "On Linux OS the output of the analyzer must be placed to /test/{{outputPathLinux}}, on Windows OS the output of the analyzer must be placed to C:\\\\test\\{{outputPathWindows}} in an analog manner. It is also important that the instruction above must keep the original exit code of the analyzer which can be read from the '$?' variable on Linux (Bash), and from the '$LASTEXITCODE' variable  on Windows (PowerShell).",
      "codeCheckerSkipFile": "Ignored source files",
      "codeCheckerSkipFileHelp": "The list of the ignored source files can specified with the CodeChecker skipfile format.",
      "codeCheckerResult": {
        "file": "File (line, column)",
        "checkerName": "Checker name",
        "severity": "Severity",
        "category": "Category",
        "message": "Message",
        "detailedStatusMessages": {
          "noIssues": "No issues were found in the uploaded submission",
          "inProgress": "The uploaded submission is being checked",
          "analysisFailed": "The static analyzer tool failed to run. The uploaded solution may be incorrect or the configuration for the task may be invalid.",
          "runnerError": "Runner error"
        }
      },
      "stdout": "Standard output",
      "stderr": "Standard error",
      "templateSelectConfirmDescription": "Applying the selected template will override the current settings!"
    },
    "exec": {
      "startUp": "Start web app",
      "tearDown": "Stop web app now",
      "autoTearDownAt": "App will auto shut down at",
      "onStartUp": "App started at: {{url}}",
      "onTearDown": "The application has shut down",
      "visit": "Visit {{url}}",
      "webApp": "Web app",
      "downloadRunLog": "Download run log",
      "form": {
        "runInterval": "Application up time"
      }
    },
    "git": {
      "gitRepo": "Git Repository",
      "path": "Path",
      "usage": "Usage",
      "taskLevelGitRepo": "Task-level git repository",
      "taskLevelGitRepoNotAvailable": "Task-level repository is not available, because this task has been created by an older version of TMS.",
      "cloneRepo": "Clone repository",
      "updateAfterStudentListChanged": "Update the repository after the list of students has changed",
      "getNewSolutions": "Get new solutions"
    },
    "sorting": {
      "sorting": "Sort by",
      "byUngradedFirst": "Ungraded first",
      "byName": "Student name",
      "byUploadTime": "Upload time"
    },
    "filterSubmission": {
      "filterSubmission": "Filter students",
      "showAllSubmission": "All student",
      "showWithSubmission": "Show students with uploaded submission",
      "showWithoutSubmission": "Show students with no submission"
    },
    "canvasAssignment": "Canvas assignment",
    "canvasUpload": "Visit the Canvas page of the assignment to upload a new solution!",
    "viewCode": "View code",
    "toggleIndent": "Toggle indentation",
    "ipLog": {
      "title": "IP Log",
      "date": "Date",
      "activity": "Activity",
      "address": "IP address",
      "sameTaskUpload": "Current submission.",
      "sameTaskDownload": "Current submission."
    },
    "ipDisallowed": {
      "title": "Disallowed IP address",
      "description": "Viewing the task description or submitting a solution is not permitted, as your IP address is not whitelisted for this task."
    }
  },
  "status": {
    "accepted": "Accepted",
    "rejected": "Rejected",
    "statusHelp": "For solutions that have been accepted, students are no longer able to upload new submissions. In the case of rejected submissions, resubmission is permitted if the deadline allows."
  },
  "quizQuestions": {
    "questionSet": "Question set",
    "questionSets": "Question sets",
    "createQuestionSet": "Create question set",
    "editQuestionSet": "Edit question set",
    "answers": "Answers",
    "newAnswer": "New answer",
    "editAnswer": "Edit answer",
    "correct": "Correct",
    "wrong": "Wrong",
    "newQuestion": "New question",
    "createQuestion": "Create question",
    "editQuestion": "Edit question",
    "successfulDuplicationQuestionSet": "Successfully duplicated"
  },
  "quizTests": {
    "testName": "Test name",
    "newTest": "New test",
    "editTest": "Edit test",
    "tests": "Tests",
    "duration": "Duration",
    "writeDuration": "Write duration",
    "score": "Points",
    "results": "Results",
    "available": "Available",
    "questionAmount": "Question amount",
    "availablefrom": "Available from",
    "availableuntil": "Available to",
    "shuffled": "Shuffle questions and answers in test instances",
    "unique": "Generate unique test instance per student",
    "finalize": "Finalize",
    "questions": "Questions",
    "availableTests": "Available tests",
    "finishedTests": "Finished tests",
    "futureTests": "Future tests",
    "writeTest": "Write test",
    "successfulDuplication": "Successfully duplicated",
    "successfulFinalization": "Successfully finalized",
    "noGroupCreated": "A group must be created before creating a new test",
    "passwordProtectedHelp": "For password-protected tests the test must be verified before starting. Leave the password field blank to turn off password protection.",
    "finalized": "Finalized",
    "durationZeroHelp": "By setting duration to 0 you can allow students to write the test for the entire time it is available."
  },
  "markdownEditor": {
    "bold": "Bold",
    "italic": "Italic",
    "strikethrough": "Strikethrough",
    "hr": "Horizontal Rule",
    "title": "Title",
    "link": "Insert Link",
    "quote": "Blockquote",
    "code": "Inline Code",
    "codeBlock": "Code Block",
    "image": "Insert Image",
    "table": "Insert Table",
    "insertLatexFormula": "Insert LaTeX Formula",
    "insertLatexBlock": "Insert LaTeX Block",
    "unorderedList": "Bullet List",
    "orderedList": "Numbered List",
    "checkedList": "Checklist",
    "codeEdit": "Edit",
    "codeLive": "Live",
    "codePreview": "Preview",
    "fullscreen": "Fullscreen",
    "openImageManager": "Open Image Manager",
    "closeImageManager": "Close Image Manager"
  },
  "plagiarism": {
    "plagiarismCheck": "Plagiarisms",
    "newPlagiarismCheck": "New Plagiarism Check",
    "type": "Type",
    "from": "From",
    "to": "To",
    "myTasks": "Show only my tasks",
    "result": "Result",
    "run": "Run",
    "runStarted": "{{name}}: check started",
    "runSuccess": "{{name}}: check is successfully finished",
    "tasksRequired": "Please select at least one task!",
    "studentsRequired": "Please select at least two students!",
    "noResults": "You have not run a check on this request yet. Click on the â€˜Runâ€™ button!",
    "basefiles": {
      "basefiles": "Base files",
      "about": "These files can be added to plagiarism checks as exempted files. For example, instructor-provided files can be exempted to avoid false alarms when students legitimately use them."
    },
    "moss": {
      "name": "Moss",
      "ignoreThreshold": "Ignore threshold",
      "ignoreThresholdHelp": "The maximum number of occurrences before it is ignored"
    },
    "jplag": {
      "name": "JPlag",
      "tune": "Tune",
      "tuneHelp": "Tunes the comparison sensitivity by adjusting the minimum token required to be counted as a matching section. A smaller number increases the sensitivity but might lead to more false-positives. The default depends on the detected language.",
      "tuneAutomatic": "Automatic (language-dependent)",
      "ignoreFiles": "Ignored files",
      "ignoreFilesHelp": "Ignore files with the given names. It matches only the file names, without directory paths.",
      "ignoreFilesError": "File names cannot contain forward or backslashes."
    }
  },
  "codeCompass": {
    "codeCompass": "CodeCompass",
    "compileInstructions": "Compile instructions (bash script):",
    "compileInstructionsNeededPrefix": "To get all CodeCompass features, you need to provide a bash script that installs all the required packages, and another one which builds the project. The scripts are executed on Ubuntu 20.04 operating system. The base image can be found on the ",
    "compileInstructionsNeededPostfix": " site. By default the image with the runtime-sqlite tag is used.",
    "information": "CodeCompass information",
    "packages": "Package installation (bash script):",
    "parameters": "CodeCompass parameters",
    "start": "Start CodeCompass",
    "starting": "CodeCompass is currently starting, please wait!",
    "stop": "Stop CodeCompass",
    "successfulParsing": "The compilation of the project was successful, you can access all possible CodeCompass features:",
    "tooManyInstances": "There are currently too many CodeCompass instances running, so we placed your request into a queue. As soon as the needed resources are available, we will start the server and will send an e-mail to the user requesting the instance.",
    "unsuccessfulParsing": "The compilation of the project was not fully successful, there may be some CodeCompass features not available:"
  },
  "statistics": {
    "systemStatistics": "System statistics",
    "submissionsUnderTesting": "Submissions under testing",
    "submissionsToBeTested": "Submissions to be tested",
    "freeDiskSpace": "Free disk space",
    "statisticsOverSemesters":"Statistics over semesters",
    "groupsCount": "Groups count",
    "tasksCount": "Tasks count",
    "submissionsCount": "Submissions count",
    "testedSubmissionsCount": "Tested submissions count"
  },
  "ipRestriction": {
    "ipRestrictions" : "IP Address Restrictions",
    "name": "Name",
    "ipAddress": "IP Address",
    "ipMask": "IP Mask",
    "newIpRestriction": "New IP Restriction",
    "editIpRestriction": "Edit IP Restriction",
    "enterIpAddress": "Enter IP address",
    "enterIpMask": "Enter IP mask",
    "enterName": "Enter IP restriction name",
    "resetWarning": "Note: Editing the Task will reset the previous IP restrictions selections. You need to select them again if you want to keep them.",
    "selectAddresses" : "Select IP address restrictions",
    "selectedAddresses" : "Selected IP address restrictions:",
    "custom": "Custom",
    "selectDefault": "Select an option",
    "duplicateIpError": "IP address and mask combination must be unique"
  }
}
