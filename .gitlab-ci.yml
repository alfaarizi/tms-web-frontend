# Default image (https://hub.docker.com/r/mcserep/php)
image: node:10.24

# Stages: lint -> test -> deploy
stages:
  - lint
  - test
  - deploy

# Cached files between builds
cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
  paths:
    - node_modules/

# Dependency scanning
include:
  - template: Dependency-Scanning.gitlab-ci.yml

# ESLint
eslint:
  stage: lint
  before_script:
    - npm install
  script:
    - npm run lint
  allow_failure: true

# Build
build:
  stage: test
  before_script:
    - npm install
  script:
    - npm run build

# Deployment over SSH
.deploy:
  stage: deploy
  image: ubuntu:20.04
  variables:
    DEPLOY_PATH: /var/www/html
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh-add <(echo "$CD_PRIVATE_KEY")
    - |
      ssh -p22 gitlab-deployer@tms.inf.elte.hu << CMD
        set -e
        set -x
        umask 002
        cd $DEPLOY_PATH
        git status
        git fetch origin
        git checkout tags/$CI_COMMIT_TAG
        npm install
        npm run build
      CMD

# Deployment to staging environment of ELTE
# All v* tags, including prereleases
deploy_staging:
  extends: .deploy
  variables:
    DEPLOY_PATH: /var/www/tms_dev/frontend-react/
  environment:
    name: staging
    url: https://tms.inf.elte.hu/dev/
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^v.*$/ && $CI_PROJECT_NAMESPACE == "tms-elte"'

# Deployment to production environment of ELTE
# All v* tags, excluding prereleases
deploy_production:
  extends: .deploy
  variables:
    DEPLOY_PATH: /var/www/tms/frontend-react/
  environment:
    name: production
    url: https://tms.inf.elte.hu/
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^v[^-]*$/ && $CI_PROJECT_NAMESPACE == "tms-elte"'
